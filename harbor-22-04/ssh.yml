- name: Install Harbor on Ubuntu 22
  hosts: localhost
  tasks:
    - name: Disable SSH temporarily
      shell: "sed -i 's|#Match User anoncvs|ForceCommand echo Please wait until the installation is completed...|g' /etc/ssh/sshd_config && systemctl restart sshd"
      ignore_errors: yes

    - name: Verify SSH is disabled
      command: grep 'ForceCommand echo' /etc/ssh/sshd_config
      register: ssh_status
      changed_when: false

    - debug:
        msg: "SSH is disabled: {{ ssh_status.stdout }}"

    - name: Update APT package index
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - openssl
        state: present

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable" | \
        tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        executable: /bin/bash

    - name: Update APT package index again
      apt:
        update_cache: yes
      async: 300
      poll: 10

    - name: Install Docker and dependencies
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Download Harbor installer
      get_url:
        url: https://stackbill-infra.s3.us-west-1.amazonaws.com/repo/harbor-offline-installer-v2.12.2.tgz
        dest: /opt/harbor-offline-installer-v2.12.2.tgz

    - name: Extract Harbor installer
      unarchive:
        src: /opt/harbor-offline-installer-v2.12.2.tgz
        dest: /opt/
        remote_src: yes

    - name: Rename Harbor configuration template
      command: mv /opt/harbor/harbor.yml.tmpl /opt/harbor/harbor.yml
      args:
        removes: /opt/harbor/harbor.yml.tmpl

    - name: Comment out HTTPS configuration in harbor.yml
      replace:
        path: /opt/harbor/harbor.yml
        regexp: '^(https:|  port: 443|  certificate: .+|  private_key: .+|  strong_ssl_ciphers: .+)$'
        replace: '# \1'

    - name: Get the primary IP address
      set_fact:
        vm_ip: "{{ ansible_default_ipv4.address }}"

    - name: Replace hostname entry using sed
      command: >
        sed -i 's/^hostname: .*/hostname: "{{ vm_ip }}"/' /opt/harbor/harbor.yml

    - name: Run Harbor installation script
      command: ./install.sh
      args:
        chdir: /opt/harbor
      async: 600
      poll: 20

    - name: Remove Harbor installer archive
      file:
        path: /opt/harbor-offline-installer-v2.12.2.tgz
        state: absent

    - name: Create systemd service for Harbor
      copy:
        dest: /etc/systemd/system/harbor.service
        content: |
          [Unit]
          Description=Harbor Container Registry
          Requires=docker.service
          After=docker.service

          [Service]
          Restart=always
          WorkingDirectory=/opt/harbor
          ExecStart=/usr/bin/docker compose -f /opt/harbor/docker-compose.yml up -d
          ExecStop=/usr/bin/docker compose -f /opt/harbor/docker-compose.yml down
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable Harbor service
      systemd:
        name: harbor
        enabled: yes

    - name: Start Harbor service
      systemd:
        name: harbor
        state: started

    - name: Check Harbor service status
      command: systemctl status harbor
      register: harbor_status
      changed_when: false

    - name: Display Harbor service status
      debug:
        msg: "{{ harbor_status.stdout_lines }}"

    - name: Enable SSH back
      shell: "sed -i 's|ForceCommand echo Please wait until the installation is completed...|#Match User anoncvs|g' /etc/ssh/sshd_config && systemctl restart sshd"

    - name: Verify SSH is re-enabled
      command: grep '#Match User anoncvs' /etc/ssh/sshd_config
      register: ssh_enable_status
      changed_when: false

    - debug:
        msg: "SSH is enabled back: {{ ssh_enable_status.stdout }}"
